matrix:
  include:
    - os: osx
      osx_image: xcode9.0
      language: node_js
      node_js: '8'
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

    - os: linux
      services: docker
      language: generic
before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
      export PATH="/tmp/git-lfs:$PATH"
    else
      docker run --rm \
        sudo apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg
        echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
        sudo apt-get update -qq
        sudo apt-get install -y -qq yarn
    fi
install:
  - yarn
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

cache:
  yarn: true

  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        export DISPLAY=:99.0 \
        sh -e /etc/init.d/xvfb start
    else
      git lfs pull
    fi

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        electronuserland/builder:wine-chrome \
        /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn test && yarn build -wl"
    else
      yarn test && yarn build -m
    fi

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"